FROM arm64v8/ros:humble-ros-core

ARG USER_NAME=user
ARG USER_UID=1000
ARG USER_GID=1000
ARG INSTALL_TYPE=desktop

ENV DEBIAN_FRONTEND=noninteractive
ENV LANG=en_US.UTF-8

RUN apt-get update -y && apt-get install -y sudo

RUN groupadd -g ${USER_GID} ${USER_NAME} && \
    useradd -m -u ${USER_UID} -g ${USER_GID} -s /bin/bash ${USER_NAME} && \
    echo "${USER_NAME} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

RUN mkdir -p /workspace && \
    chown ${USER_UID}:${USER_GID} /workspace
    
USER ${USER_NAME}
WORKDIR /workspace

# Locales (UTF-8)
RUN sudo -E apt-get update -y && sudo -E apt-get install -y locales
RUN sudo locale-gen en_US en_US.UTF-8
RUN sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8

# Add GPG keys for Gazebo and ROS
RUN sudo curl -fsSL https://packages.osrfoundation.org/gazebo.gpg \
    -o /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg

RUN curl -fsSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc \
    | sudo apt-key add -

# Set up Gazebo and ROS repositories
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" \
    | sudo tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null

# Installation
RUN sudo -E apt update -y && sudo -E apt install -y \
    gz-harmonic \
    ros-humble-ros-gz

RUN sudo apt-get -y install wget gcc make cmake

RUN sudo -E apt-get update && sudo -E apt-get install -y \
    git \
    iproute2 \
    make \
    python3-pip python-is-python3 \
    tini \
    vim

RUN pip install kconfiglib pyros-genmsg jinja2 jsonschema

RUN git clone https://github.com/eProsima/Micro-XRCE-DDS-Agent.git && \
    cd Micro-XRCE-DDS-Agent && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j6 && \
    sudo make install -j6 && \
    sudo ldconfig /usr/local/lib/ && \
    cd /workspace && \
    rm -rf Micro-XRCE-DDS-Agent

RUN pip install symforce

RUN cd ~ && \
    git clone -b release/1.15 --single-branch https://github.com/PX4/PX4-Autopilot.git --depth 10 && \
    bash ./PX4-Autopilot/Tools/setup/ubuntu.sh 


RUN cd ~/PX4-Autopilot && \
    git submodule update --init --recursive && \
    make px4_sitl -j6

RUN export NVIM_ROOT=nvim-linux-x86_64 && \
    curl -OL 'https://github.com/neovim/neovim/releases/download/v0.11.4/nvim-linux-x86_64.tar.gz' && \
    tar -xf 'nvim-linux-x86_64.tar.gz' && \
    sudo install -m 755 "${PWD}/${NVIM_ROOT}"/bin/* /bin && \
    sudo install -d /lib/nvim/parser && \
    sudo install -m 644 "${PWD}/${NVIM_ROOT}"/lib/nvim/parser/* /lib/nvim/parser/ && \
    sudo cp -r "${NVIM_ROOT}/share/nvim" /usr/share

RUN git clone https://github.com/Welly17223/dotfiles /home/user/dotfiles && \
    sudo apt-get -y install stow python3.10-venv unzip ripgrep && \
    cd /home/user/dotfiles && \
    ./impl_all.sh && \
    nvim --headless '+Lazy install' +q && \
    nvim --headless "+Lazy! load! mason" "+MasonInstall python-lsp-server" +qa

RUN sudo apt-get clean
